/// <reference types="googlemaps" />
import { ElementRef, EventEmitter, NgZone, OnInit } from '@angular/core';
import { FormControl } from '@angular/forms';
import { MapsAPILoader } from '@agm/core';
import { Location } from '../interfaces/location.interface';
import { GermanAddress } from '../interfaces/germand.address.interface';
import PlaceResult = google.maps.places.PlaceResult;
import AutocompleteOptions = google.maps.places.AutocompleteOptions;
import * as ɵngcc0 from '@angular/core';
export declare class MatGoogleMapsAutocompleteDirective implements OnInit {
    platformId: string;
    elemRef: ElementRef;
    mapsAPILoader: MapsAPILoader;
    private ngZone;
    address: PlaceResult | string;
    country: string | string[];
    placeIdOnly?: boolean;
    strictBounds?: boolean;
    types?: string[];
    type?: string;
    autoCompleteOptions: AutocompleteOptions;
    onChange: EventEmitter<PlaceResult | string | null>;
    onAutocompleteSelected: EventEmitter<PlaceResult>;
    onGermanAddressMapped: EventEmitter<GermanAddress>;
    onLocationSelected: EventEmitter<Location>;
    private onNewPlaceResult;
    private addressValidator;
    addressSearchControl: FormControl;
    constructor(platformId: string, elemRef: ElementRef, mapsAPILoader: MapsAPILoader, ngZone: NgZone);
    ngOnInit(): void;
    initGoogleMapsAutocomplete(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MatGoogleMapsAutocompleteDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<MatGoogleMapsAutocompleteDirective, "[matGoogleMapsAutocomplete]", ["matGoogleMapsAutocomplete"], {
    "autoCompleteOptions": "autoCompleteOptions";
    "address": "address";
    "country": "country";
    "placeIdOnly": "placeIdOnly";
    "strictBounds": "strictBounds";
    "types": "types";
    "type": "type";
}, {
    "onChange": "onChange";
    "onAutocompleteSelected": "onAutocompleteSelected";
    "onGermanAddressMapped": "onGermanAddressMapped";
    "onLocationSelected": "onLocationSelected";
}, never>;
}

//# sourceMappingURL=mat-google-maps-autocomplete.directive.d.ts.map