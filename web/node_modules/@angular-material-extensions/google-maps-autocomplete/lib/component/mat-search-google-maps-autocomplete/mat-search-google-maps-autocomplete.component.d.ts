/// <reference types="googlemaps" />
import { EventEmitter, OnInit } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { GermanAddress } from '../../interfaces';
import { Appearance } from '../mat-google-maps-autocomplete.component';
import * as ɵngcc0 from '@angular/core';
export declare class MatSearchGoogleMapsAutocompleteComponent implements OnInit {
    private formBuilder;
    appearance: string | Appearance;
    searchAddressLabel: string;
    streetNameLabel: string;
    streetNumberLabel: string;
    postalCodeLabel: string;
    localityLabel: string;
    vicinityLabel: string;
    showVicinity: boolean;
    country: string | string[];
    placeIdOnly?: boolean;
    strictBounds?: boolean;
    types?: string[];
    type?: string;
    readonly: boolean;
    disableSearch: boolean;
    value: GermanAddress;
    onGermanAddressMapped: EventEmitter<GermanAddress>;
    germanAddress: GermanAddress;
    addressFormGroup: FormGroup;
    constructor(formBuilder: FormBuilder);
    ngOnInit(): void;
    createAddressFormGroup(): FormGroup;
    syncAutoComplete($event: google.maps.places.PlaceResult): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MatSearchGoogleMapsAutocompleteComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MatSearchGoogleMapsAutocompleteComponent, "mat-search-google-maps-autocomplete", never, {
    "appearance": "appearance";
    "searchAddressLabel": "searchAddressLabel";
    "streetNameLabel": "streetNameLabel";
    "streetNumberLabel": "streetNumberLabel";
    "postalCodeLabel": "postalCodeLabel";
    "localityLabel": "localityLabel";
    "vicinityLabel": "vicinityLabel";
    "showVicinity": "showVicinity";
    "country": "country";
    "placeIdOnly": "placeIdOnly";
    "strictBounds": "strictBounds";
    "types": "types";
    "type": "type";
    "readonly": "readonly";
    "disableSearch": "disableSearch";
    "value": "value";
}, {
    "onGermanAddressMapped": "onGermanAddressMapped";
}, never>;
}

//# sourceMappingURL=mat-search-google-maps-autocomplete.component.d.ts.map