{"version":3,"file":"user.component.d.ts","sources":["/Users/albaortegaflores/Documentos/TFM/code/web/node_modules/ngx-auth-firebaseui/lib/components/ngx-auth-firebaseui-user/user.component.d.ts"],"sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatFormFieldAppearance } from '@angular/material/form-field';\nimport { NgxAuthFirebaseUIConfig } from '../../interfaces';\nimport { AuthProcessService } from '../../services/auth-process.service';\nimport { FirestoreSyncService } from '../../services/firestore-sync.service';\nimport { Observable } from 'rxjs';\nexport declare class UserComponent {\n    auth: AngularFireAuth;\n    authProcess: AuthProcessService;\n    private fireStoreService;\n    config: NgxAuthFirebaseUIConfig;\n    editMode: boolean;\n    canLogout: boolean;\n    canEditAccount: boolean;\n    canDeleteAccount: boolean;\n    appearance: MatFormFieldAppearance;\n    onSignOut: EventEmitter<void>;\n    onAccountEdited: EventEmitter<void>;\n    onAccountDeleted: EventEmitter<void>;\n    updateFormGroup: FormGroup;\n    updateNameFormControl: FormControl;\n    updateEmailFormControl: FormControl;\n    updatePhoneNumberFormControl: FormControl;\n    constructor(auth: AngularFireAuth, authProcess: AuthProcessService, fireStoreService: FirestoreSyncService, config: NgxAuthFirebaseUIConfig);\n    changeEditMode(): void;\n    reset(): void;\n    save(): Promise<void>;\n    signOut(): void;\n    /**\n     * Delete the account of the current firebase ngx-auth-firebaseui-user\n     *\n     * On Success, emit the <onAccountDeleted> event and toast a msg!#\n     * Otherwise, log the and toast and error msg!\n     *\n     */\n    deleteAccount(): Promise<void>;\n    protected initUpdateFormGroup(): Observable<FormGroup>;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;AAQA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;"}