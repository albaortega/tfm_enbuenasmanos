import { EventEmitter } from '@angular/core';
import { AngularFireAuth } from '@angular/fire/auth';
import { FormControl, FormGroup } from '@angular/forms';
import { MatFormFieldAppearance } from '@angular/material/form-field';
import { NgxAuthFirebaseUIConfig } from '../../interfaces';
import { AuthProcessService } from '../../services/auth-process.service';
import { FirestoreSyncService } from '../../services/firestore-sync.service';
import { Observable } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
export declare class UserComponent {
    auth: AngularFireAuth;
    authProcess: AuthProcessService;
    private fireStoreService;
    config: NgxAuthFirebaseUIConfig;
    editMode: boolean;
    canLogout: boolean;
    canEditAccount: boolean;
    canDeleteAccount: boolean;
    appearance: MatFormFieldAppearance;
    onSignOut: EventEmitter<void>;
    onAccountEdited: EventEmitter<void>;
    onAccountDeleted: EventEmitter<void>;
    updateFormGroup: FormGroup;
    updateNameFormControl: FormControl;
    updateEmailFormControl: FormControl;
    updatePhoneNumberFormControl: FormControl;
    constructor(auth: AngularFireAuth, authProcess: AuthProcessService, fireStoreService: FirestoreSyncService, config: NgxAuthFirebaseUIConfig);
    changeEditMode(): void;
    reset(): void;
    save(): Promise<void>;
    signOut(): void;
    /**
     * Delete the account of the current firebase ngx-auth-firebaseui-user
     *
     * On Success, emit the <onAccountDeleted> event and toast a msg!#
     * Otherwise, log the and toast and error msg!
     *
     */
    deleteAccount(): Promise<void>;
    protected initUpdateFormGroup(): Observable<FormGroup>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<UserComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<UserComponent, "ngx-auth-firebaseui-user", never, {
    "canLogout": "canLogout";
    "canEditAccount": "canEditAccount";
    "canDeleteAccount": "canDeleteAccount";
    "editMode": "editMode";
    "appearance": "appearance";
}, {
    "onSignOut": "onSignOut";
    "onAccountEdited": "onAccountEdited";
    "onAccountDeleted": "onAccountDeleted";
}, never>;
}

//# sourceMappingURL=user.component.d.ts.map